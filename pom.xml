<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.davgeoand.template</groupId>
    <artifactId>javalin-template</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mainClass>com.davgeoand.template.AppRunner</mainClass>
        <service.version>${project.version}</service.version>
        <javalin.version>5.6.1</javalin.version>
        <lombok.version>1.18.28</lombok.version>
        <otel.version>1.28.0</otel.version>
    </properties>

    <dependencies>
        <!-- javalin -->
        <!-- https://mvnrepository.com/artifact/io.javalin/javalin-bundle -->
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin-bundle</artifactId>
            <version>${javalin.version}</version>
        </dependency>

        <!-- tools -->
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- otel monitoring -->
        <!-- https://mvnrepository.com/artifact/io.opentelemetry.instrumentation/opentelemetry-resources -->
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-resources</artifactId>
            <version>${otel.version}-alpha</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.opentelemetry/opentelemetry-sdk-extension-autoconfigure-spi -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
            <version>${otel.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.opentelemetry.instrumentation/opentelemetry-instrumentation-annotations -->
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-instrumentation-annotations</artifactId>
            <version>${otel.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/properties-maven-plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.1.0</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <outputFile>
                                ${project.build.outputDirectory}/build.properties
                            </outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- https://mvnrepository.com/artifact/io.github.git-commit-id/git-commit-id-maven-plugin -->
            <!--            <plugin>-->
            <!--                <groupId>io.github.git-commit-id</groupId>-->
            <!--                <artifactId>git-commit-id-maven-plugin</artifactId>-->
            <!--                <version>5.0.0</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <goals>-->
            <!--                            <goal>revision</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--                <configuration>-->
            <!--                    <prefix>git</prefix>-->
            <!--                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>-->
            <!--                    <injectAllReactorProjects>true</injectAllReactorProjects>-->
            <!--                    <generateGitPropertiesFile>false</generateGitPropertiesFile>-->
            <!--                    <failOnNoGitDirectory>false</failOnNoGitDirectory>-->
            <!--                    <includeOnlyProperties>-->
            <!--                        <includeOnlyProperty>git.branch</includeOnlyProperty>-->
            <!--                        <includeOnlyProperty>git.commit.id</includeOnlyProperty>-->
            <!--                    </includeOnlyProperties>-->
            <!--                </configuration>-->
            <!--            </plugin>-->

            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>.</Class-Path>
                        </manifestEntries>
                    </archive>
                    <finalName>${project.artifactId}</finalName>
                </configuration>
            </plugin>

            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>

            <!-- https://mvnrepository.com/artifact/io.fabric8/docker-maven-plugin -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.41.0</version>
                <configuration>
                    <images>
                        <image>
                            <name>${project.artifactId}:latest</name>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-remove-local</id>
                        <goals>
                            <goal>remove</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>docker-build-local</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>docker-build-repo</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <images>
                                <image>
                                    <name>dgandalcio/${project.artifactId}:${project.version}</name>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>